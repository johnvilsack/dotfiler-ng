#!/usr/bin/env bash
# dotfiler-ng v2.0.0 - Next-generation dotfiles manager using rsync
# Compatible with bash 3.2+ (macOS default)

set -euo pipefail

# Version
VERSION="2.0.0"
PROGRAM_NAME="dotfiler"

# Determine script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LIB_DIR="$SCRIPT_DIR/dotfiler_lib"

# Source library files
source "$LIB_DIR/common.sh"
source "$LIB_DIR/config.sh"
source "$LIB_DIR/add.sh"
source "$LIB_DIR/ignore.sh"
source "$LIB_DIR/remove.sh"
source "$LIB_DIR/list.sh"
source "$LIB_DIR/sync.sh"
source "$LIB_DIR/delete.sh"
source "$LIB_DIR/init.sh"

# Help function
show_help() {
    cat << EOF
$PROGRAM_NAME v$VERSION - Dotfiles management with rsync

USAGE:
    $PROGRAM_NAME <command> [options]

COMMANDS:
    add <path>        Add a file or directory to tracking
    remove <path>     Remove a file or directory from tracking
    ignore <pattern>  Add a pattern to ignore list  
    delete <path>     Delete and tombstone a file/directory
    sync [options]    Sync dotfiles using rsync
        --repo-first  Fresh install mode (repo overwrites filesystem)
    build [options]   Alias for sync (backward compatibility)
        --repo-first  Fresh install mode (repo overwrites filesystem)
    config            Interactive configuration and setup
    init              Alias for config
    list              List all tracked items
    status            Show sync status and changes
    version           Show version information
    help              Show this help message

EXAMPLES:
    $PROGRAM_NAME config           # Interactive setup
    $PROGRAM_NAME add ~/.zshrc
    $PROGRAM_NAME add ~/.config/nvim  
    $PROGRAM_NAME ignore "*.log"
    $PROGRAM_NAME sync
    $PROGRAM_NAME sync --repo-first

CONFIG:
    Configuration stored in: ~/.config/dotfiler/
    Repository location: Configured during install

For more information: https://github.com/johnvilsack/dotfiler-ng
EOF
}

# Main CLI router
main() {
    # Handle config/init commands before initializing config
    if [[ "${1:-}" == "config" || "${1:-}" == "init" ]]; then
        shift
        cmd_config "$@"
        exit 0
    fi
    
    # Initialize configuration for other commands
    init_config
    
    # Handle no arguments
    if [[ $# -eq 0 ]]; then
        show_help
        exit 0
    fi
    
    # Parse command
    case "${1:-}" in
        "add")
            shift
            cmd_add "$@"
            ;;
        "remove")
            shift
            cmd_remove "$@"
            ;;
        "ignore")
            shift
            cmd_ignore "$@"
            ;;
        "delete")
            shift
            cmd_delete "$@"
            ;;
        "sync")
            shift
            cmd_sync "$@"
            ;;
        "build")
            shift
            cmd_sync "$@"  # Backward compatibility alias
            ;;
        "list")
            cmd_list
            ;;
        "status")
            cmd_status
            ;;
        "version")
            echo "$PROGRAM_NAME v$VERSION"
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            log_error "Unknown command: $1"
            echo ""
            show_help
            exit 1
            ;;
    esac
}

# Run main function
main "$@"
